name: Repository Dispatch

on:
  repository_dispatch:
    types: [trigger]

jobs:
  deploy:
    name: Run ansible
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Extract ansible vault password to file
        run: echo $VAULT_PASS > vault_password
        env:
          VAULT_PASS: ${{ secrets.VAULT_PASS }}

      - name: Create .ssh folder
        run: mkdir ~/.ssh

      - name: Decrypt ssh key encrypted file with ansible-vault
        run: ansible-vault view roles/user/files/bitgodine.pem --vault-password-file vault_password > ~/.ssh/id_rsa

      - name: Update permissions on ssh key
        run: chmod 0600 ~/.ssh/id_rsa

      - name: Install ansible galaxy requirements
        run: ansible-galaxy install -f -r roles/requirements.yml

      - name: Run ansible playbook
        run: ansible-playbook -e env=$TRIGGER_BRANCH -e TRIGGER_SHA=$TRIGGER_SHA -e TRIGGER_REF=$TRIGGER_REF -e TRIGGER_REPOSITORY=$TRIGGER_REPOSITORY -e DOCKER_USERNAME=$DOCKER_USERNAME -e DOCKER_PASSWORD=$DOCKER_PASSWORD --vault-password-file vault_password -i hosts.ini playbook.yml
        env:
          VAULT_PASS: ${{ secrets.VAULT_PASS }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          TRIGGER_SHA: ${{ github.event.client_payload.sha }}
          TRIGGER_REF: ${{ github.event.client_payload.ref }}
          TRIGGER_REPOSITORY: ${{ github.event.client_payload.repo }}
          TRIGGER_BRANCH: ${{ github.event.client_payload.branch }}

  # notify_success:
  #   name: Slack Notification
  #   runs-on: ubuntu-latest
  #   needs: deploy
  #   if: success()
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Slack Notification
  #       uses: rtCamp/action-slack-notify@v2.0.0
  #       env:
  #         SLACK_WEBHOOK: ${{ secrets.SLACK_URL }}
  #         SLACK_USERNAME: ${{ github.event.client_payload.actor }}
  #         SLACK_ICON: https://avatars1.githubusercontent.com/u/55328880?s=200&v=4
  #         SLACK_COLOR: "good"
  #         SLACK_TITLE: "Deployed ${{ github.event.client_payload.repo }} :rocket:"
  #         SLACK_MESSAGE: "*${{ github.event.client_payload.branch }}*, version github.com/${{ github.event.client_payload.repo }}/commit/${{ github.event.client_payload.sha }}"

  # notify_failure:
  #   name: Slack Positive Notification
  #   runs-on: ubuntu-latest
  #   needs: deploy
  #   if: failure()
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Slack Notification
  #       uses: rtCamp/action-slack-notify@v2.0.0
  #       env:
  #         SLACK_WEBHOOK: ${{ secrets.SLACK_URL }}
  #         SLACK_USERNAME: ${{ github.event.client_payload.actor }}
  #         SLACK_ICON: https://avatars1.githubusercontent.com/u/55328880?s=200&v=4
  #         SLACK_COLOR: "#ff0000"
  #         SLACK_TITLE: "Failed deploy ${{ github.event.client_payload.repo }} :crying_cat_face:"
  #         SLACK_MESSAGE: "*${{ github.event.client_payload.branch }}*, version github.com/${{ github.event.client_payload.repo }}/commit/${{ github.event.client_payload.sha }}"
